package util

import (
	"bufio"
	"errors"
	"fmt"
	"os"
	"os/exec"

	"github.com/git-l10n/git-po-helper/flag"
	"github.com/git-l10n/git-po-helper/gettext"
	"github.com/git-l10n/git-po-helper/repository"
)

func checkPoSyntax(poFile string) ([]error, bool) {
	var (
		progs []string
		errs  []error
		msgs  []string
	)

	if !Exist(poFile) {
		errs = append(errs, fmt.Errorf(`fail to check "%s", does not exist`, poFile))
		return errs, false
	}

	// If this program is called in github actions, try to install gettext-0.14.x
	// to find backward incompatible issues.  Otherwise, try to find and use
	// gettext-0.14.x if it already exists.
	if flag.GitHubActionEvent() != "" {
		switch flag.GitHubActionTryInstall() {
		case "no":
			break
		case "yes":
			if err := gettext.InstallGettext(gettext.Version0_14); err != nil {
				msgs = append(msgs, err.Error())
			}
			gettext.ShowHints()
		default:
			msgs = append(msgs, "fail to install gettext-0.14.x ...")
			gettext.ShowHints()
		}
	} else {
		gettext.ShowHints()
	}

	// We want to run "msgfmt" twice using different versions of gettext,
	// because older version of gettext is not compatible with the comments
	// generated by new version of gettext. See:
	//
	//     https://lore.kernel.org/git/874l8rwrh2.fsf@evledraar.gmail.com/
	//
	if app, ok := gettext.GettextAppMap[gettext.VersionAny]; ok {
		progs = append(progs, app.Program("msgfmt"))
	}
	if app, ok := gettext.GettextAppMap[gettext.Version0_14]; ok {
		progs = append(progs, app.Program("msgfmt"))
	}

	for idx, prog := range progs {
		cmd := exec.Command(prog,
			"-o",
			os.DevNull,
			"--check",
			"--statistics",
			poFile)
		cmd.Dir = repository.WorkDir()
		stderr, err := cmd.StderrPipe()
		if err == nil {
			err = cmd.Start()
		}
		if err != nil {
			errs = append(errs, err)
			return errs, false
		}

		scanner := bufio.NewScanner(stderr)
		for scanner.Scan() {
			line := scanner.Text()
			if len(line) > 0 {
				msgs = append(msgs, line)
			}
		}
		if err = cmd.Wait(); err != nil {
			for _, line := range msgs {
				errs = append(errs, errors.New(line))
			}
			errs = append(errs, fmt.Errorf("fail to check po: %s", err))
			return errs, false
		}
		// We may check syntax using different versions of gettext, Eg:
		// gettext 0.14 and new version. Do not report duplicate output
		// messages, such as statistics.
		if idx == 0 {
			for _, line := range msgs {
				errs = append(errs, errors.New(line))
			}
		}
		msgs = []string{}
	}
	return errs, true
}
